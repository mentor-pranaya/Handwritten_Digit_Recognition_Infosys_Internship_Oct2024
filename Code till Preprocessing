import torch
from torchvision import datasets, transforms
from torch.utils.data import DataLoader
import matplotlib.pyplot as plt
import numpy as np
import torchvision


transform = transforms.Compose([
    transforms.ToTensor(),
    transforms.RandomRotation(10),
    transforms.ColorJitter(brightness=0.5, contrast=0.5),
    transforms.RandomCrop(size=(24, 24)),
    transforms.Normalize((0.5,), (0.5,))  
])


train_dataset = datasets.MNIST(root='./data', train=True, transform=transform, download=True)
train_loader = DataLoader(dataset=train_dataset, batch_size=64, shuffle=True)


def show_image(img):
    img = img / 2 + 0.5  
    npimg = img.numpy() 
    plt.imshow(np.transpose(npimg, (1, 2, 0)), cmap='gray') 


data_iter = iter(train_loader)
images, labels = next(data_iter) 



show_image(torchvision.utils.make_grid(images[:25], nrow=5)) 
plt.show()

transform = transforms.Compose([
    transforms.RandomRotation(10),
    transforms.ColorJitter(brightness=0.5, contrast=0.5),
    transforms.RandomCrop(size=(24, 24)) 
])
